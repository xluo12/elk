input {
   file {
      path => [  "/opt/tomcat/logs/*.txt"]
      start_position => beginning
      ignore_older => 0
  }
}
filter {
  grok {
    match => {
      "message" => "%{IP:client} \- \- \[%{HTTPDATE:timestamp}\] \"%{WORD:method} /Titan%{URIPATH:api}(?:\?user_id=%{NUMBER:user_id}&lat=%{NUMBER:latitude}&lon=%{NUMBER:longitude}|.*) %{WORD:protocol}/%{NUMBER:protocalNum}\" %{NUMBER:status} (?:%{NUMBER:latency}|\-)"
    }
  }
  if "_grokparsefailure" in [tags] {
    drop { }
  }
  if [latitude] and [longitude] {
    mutate
    {
      add_field => ["[geoip][location]","%{[longitude]}"]
      add_field => ["[geoip][location]","%{[latitude]}"]
    }
  }
  mutate
  {
    convert => ["[geoip][location]","float"]
    convert => ["latency","float"]
  }
}
output {
   stdout {
      codec => rubydebug
   }
   elasticsearch {
      hosts => "localhost"
   }
}

